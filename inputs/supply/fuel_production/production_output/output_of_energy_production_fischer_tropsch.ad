# This input uses the carrier output conversions to calculate the efficiencies instead of the loss output conversion.
# When using the loss output conversion, the primary demand is not calculated correctly.
# See https://github.com/quintel/etengine/issues/1614

- query =
    total_production = USER_INPUT() * BILLIONS;

    share_synthetic = DIVIDE(INPUT_VALUE(energy_production_fischer_tropsch_synthetic_share),100.0);
    share_non_biogenic_waste = DIVIDE(INPUT_VALUE(energy_production_fischer_tropsch_non_biogenic_waste_ccs_share),100.0);
    share_biogenic_waste = DIVIDE(INPUT_VALUE(energy_production_fischer_tropsch_biogenic_waste_ccs_share),100.0);
    share_dry_biomass = DIVIDE(INPUT_VALUE(energy_production_fischer_tropsch_dry_biomass_ccs_share),100.0);

    efficiency_synthetic = V(energy_production_fischer_tropsch_synthetic_must_run, "kerosene_output_conversion + gasoline_output_conversion");
    efficiency_non_biogenic_waste = V(energy_production_fischer_tropsch_non_biogenic_waste_ccs, "kerosene_output_conversion + diesel_output_conversion + naphtha_output_conversion");
    efficiency_biogenic_waste = V(energy_production_fischer_tropsch_biogenic_waste_ccs, "bio_kerosene_output_conversion + biodiesel_output_conversion + bionaphtha_output_conversion");
    efficiency_dry_biomass = V(energy_production_fischer_tropsch_dry_biomass_ccs, "bio_kerosene_output_conversion + biodiesel_output_conversion + bionaphtha_output_conversion");

    demand_synthetic = total_production * share_synthetic / efficiency_synthetic;
    demand_non_biogenic_waste = total_production * share_non_biogenic_waste / efficiency_non_biogenic_waste;
    demand_biogenic_waste = total_production * share_biogenic_waste / efficiency_biogenic_waste;
    demand_dry_biomass = total_production * share_dry_biomass / efficiency_dry_biomass;

    EACH(
      UPDATE(
        V(energy_production_fischer_tropsch_synthetic_must_run),
        demand,
        demand_synthetic
      ),
      UPDATE(
        V(energy_production_fischer_tropsch_non_biogenic_waste_ccs),
        demand,
        demand_non_biogenic_waste
      ),
      UPDATE(
        V(energy_production_fischer_tropsch_biogenic_waste_ccs),
        demand,
        demand_biogenic_waste
      ),
      UPDATE(
        V(energy_production_fischer_tropsch_dry_biomass_ccs),
        demand,
        demand_dry_biomass
      )
    )
- priority = 0
- max_value_gql = present:PRODUCT(SUM(Q(final_demand_of_biomass_products),Q(final_demand_of_oil_and_derivatives)),3)
- min_value = 0.0
- start_value_gql = present:Q(output_of_fischer_tropsch)
- step_value = 0.1
- unit = PJ
- update_period = future
